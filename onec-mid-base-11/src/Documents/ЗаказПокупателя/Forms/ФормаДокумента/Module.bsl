
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	// <<< Начало: А.С. Голубев -> 15.09.2024г.
	// Задача: Суммирование Общей скидки по документу и скидки в строке, 
	// с ограничением максимальной скидки 100%, и выводом сообщения, при превышении скидки 100% 
	
	// Старый код:
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	// Новый код:
	СуммарнаяСкидка = Объект.АС_Скидка + ТекущиеДанные.Скидка;
	Если СуммарнаяСкидка > 100 Тогда
		ТекущиеДанные.Сумма = 0;
		Сообщить("Максимальный размер скидки не может превышать 100%"); 
	Иначе
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена * ((100 - СуммарнаяСкидка) / 100);
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	// Конец: А.С. Голубев >>>
		
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура АС_СкидкаПриИзменении(Элемент)
	
	// <<< Начало: А.С. Голубев -> 15.09.2024г.
	// Задача: При изменнии скидки создать диалог нужго ли пересчитывать строки ТЧ 
	ПриИзмененииСкидки_Асинх();
	// Конец: А.С. Голубев >>>
		
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриИзмененииСкидки_Асинх()  
	
	// <<< Начало: А.С. Голубев -> 15.09.2024г.
	// Задача: Создаем диалог с пользователем для принятия решения о пересчете строк в табличных частях 
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
		ОтветПользователя = ВопросАсинх("Пересчитать номенклатуру с учетом скидки?", РежимДиалогаВопрос.ДаНет,,,"Изменен процент скидки");
		Результат = Ждать ОтветПользователя;
			Если Результат = КодВозвратаДиалога.Да Тогда
			
			ПрименитьСкидку();
			
		КонецЕсли; 
		
	КонецЕсли; 	
	// Конец: А.С. Голубев >>>
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСоСкидкой(Команда)
	
	// <<< Начало: А.С. Голубев -> 15.09.2024г.
	// Задача: Делаем пересчет по каждой строке при нажатии кнопки 
	ПрименитьСкидку();
     // Конец: А.С. Голубев >>>
     	 
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьСкидку()
	 
	// <<< Начало: А.С. Голубев -> 15.09.2024г.
	// Задача: Делаем пересчет по каждой строке при нажатии кнопки 
	Для каждого Строка Из Объект.Товары Цикл 
		
		РассчитатьСуммуСтроки(Строка);
		
	КонецЦикла;  
	
	Для каждого Строка Из Объект.Услуги Цикл 
		
		РассчитатьСуммуСтроки(Строка);
		
	КонецЦикла;
	
	// Конец: А.С. Голубев >>>
	
КонецПроцедуры


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
